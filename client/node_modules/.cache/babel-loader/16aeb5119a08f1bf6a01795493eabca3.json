{"ast":null,"code":"var _jsxFileName = \"/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/pages/collection/Collection.jsx\";\nimport React, { useEffect } from \"react\";\nimport \"./Collection.scss\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\nimport CollectionItem from \"../../components/collection-items/Collection-Items\";\nimport { firestore } from \"firebase\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log(\"I am subscribing\");\n    const unsubscribeFromCollections = firestore.collections(\"collections\").onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log(\"I am unsubscribing\");\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/pages/collection/Collection.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","firestore","CollectionPage","collection","console","log","unsubscribeFromCollections","collections","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,cAAP,MAA2B,oDAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,0BAA0B,GAAGL,SAAS,CACzCM,WADgC,CACpB,aADoB,EAEhCC,UAFgC,CAErBC,QAAQ,IAAIL,OAAO,CAACC,GAAR,CAAYI,QAAZ,CAFS,CAAnC;AAIA,WAAO,MAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAHD;AAID,GAVQ,EAUN,EAVM,CAAT;AADyC,QAajCI,KAbiC,GAahBP,UAbgB,CAajCO,KAbiC;AAAA,QAa1BC,KAb0B,GAahBR,UAbgB,CAa1BQ,KAb0B;AAczC,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAxBD;;AA0BA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cd,EAAAA,UAAU,EAAEJ,gBAAgB,CAACkB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAelB,OAAO,CAACiB,eAAD,CAAP,CAAyBb,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./Collection.scss\";\nimport { connect } from \"react-redux\";\nimport { selectCollection } from \"../../redux/shop/shop.selector\";\nimport CollectionItem from \"../../components/collection-items/Collection-Items\";\nimport { firestore } from \"firebase\";\n\nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    console.log(\"I am subscribing\");\n    const unsubscribeFromCollections = firestore\n      .collections(\"collections\")\n      .onSnapshot(snapshot => console.log(snapshot));\n\n    return () => {\n      console.log(\"I am unsubscribing\");\n      unsubscribeFromCollections();\n    };\n  }, []);\n\n  const { title, items } = collection;\n  return (\n    <div className=\"collection-page\">\n      <h2 className=\"title\">{title}</h2>\n      <div className=\"items\">\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}