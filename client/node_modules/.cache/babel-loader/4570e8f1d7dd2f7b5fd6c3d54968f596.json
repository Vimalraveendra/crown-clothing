{"ast":null,"code":"var _jsxFileName = \"/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/pages/ShopPage/ShopPage.jsx\";\nimport React from \"react\";\nimport CollectionOverviewContainer from \"../../components/collection-overview/Collection-Overview.container\";\nimport { Route } from \"react-router-dom\";\nimport CollectionContainer from \"../collection/Collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isCollectionLoaded } from \"../../redux/shop/shop.selector\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStart = this.props.fetchCollectionsStart;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: isCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/pages/ShopPage/ShopPage.jsx"],"names":["React","CollectionOverviewContainer","Route","CollectionContainer","fetchCollectionsStart","createStructuredSelector","isCollectionLoaded","connect","ShopPage","Component","componentDidMount","props","render","match","path","mapStateToProps","mapDispatchToProps","dispatch","fetchCollectionsStartAsync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVN,qBADU,GACgB,KAAKO,KADrB,CACVP,qBADU;AAElBA,IAAAA,qBAAqB;AACtB;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKF,KADhB,CACCE,KADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAFN;AAGE,MAAA,SAAS,EAAEb,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,mBAFN;AAGE,MAAA,SAAS,EAAEX,mBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;;AAtBoC;;AAyBvC,MAAMY,eAAe,GAAGV,wBAAwB,CAAC;AAC/CC,EAAAA,kBAAkB,EAAEA;AAD2B,CAAD,CAAhD;;AAGA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,qBAAqB,EAAE,MAAMa,QAAQ,CAACC,0BAA0B,EAA3B;AADC,CAAL,CAAnC;;AAGA,eAAeX,OAAO,CAACQ,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionOverviewContainer from \"../../components/collection-overview/Collection-Overview.container\";\nimport { Route } from \"react-router-dom\";\nimport CollectionContainer from \"../collection/Collection.container\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isCollectionLoaded } from \"../../redux/shop/shop.selector\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStart } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionOverviewContainer}\n        />\n        <Route\n          exact\n          path={`${match.path}/:collectionId`}\n          component={CollectionContainer}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: isCollectionLoaded\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStartAsync())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}