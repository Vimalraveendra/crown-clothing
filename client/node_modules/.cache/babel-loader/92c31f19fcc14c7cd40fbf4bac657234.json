{"ast":null,"code":"var _jsxFileName = \"/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/components/signin/SignIn.jsx\";\nimport React from \"react\";\nimport \"./SignIn.scss\";\nimport FormInput from \"../forminput/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { auth, signInWithGoogle } from \"../../firebase/Firebase.Utils\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: \"\",\n          password: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"sign in with google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/vimalraveendran/Desktop/React-Course/crown-clothing/src/components/signin/SignIn.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","signInWithEmailAndPassword","setState","error","console","log","handleChange","target","name","value","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./SignIn.scss\";\nimport FormInput from \"../forminput/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { auth, signInWithGoogle } from \"../../firebase/Firebase.Utils\";\n\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: \"\", password: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <div className=\"sign-in\">\n        <h2 className=\"title\">I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            handleChange={this.handleChange}\n            label=\"email\"\n            required\n          />\n\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label=\"password\"\n            required\n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">sign in</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              sign in with google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\nexport default connect(mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}